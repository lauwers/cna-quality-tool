tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: cna-modeling-tosca-profile
  template_author: Distributed Systems Group
  template_version: 0.1.0

description: >-
  This TOSCA definitions document contains the CNA Modeling node types.

node_types:

  cna.qualityModel.entities.Root.Component:
    derived_from: tosca.nodes.Root
    description: Node Type to model Component entities
    properties:
      managed:
        type: boolean
        description: A component is managed if it is exclusively operated by someone else, e.g. a cloud provider and the source code of the component instance is inaccessible. If the source code of a component can be changed by yourself, the component is not managed
        required: true
      software_type:
        type: string
        description: The type of the software in the sense of who developed it. If it is a self-written component use "custom", if it is an existing open-source solution which is not customized (apart from configuration) use "open-source". If it is licensed proprietary software, use "proprietary".
        default: custom
        required: true
      stateless:
        type: boolean
        description: True if this component is stateless, that means it requires no disk storage space where data is persisted between executions. That means it can store data to disk, but should not rely on this data to be available for following executions. Instead it should be able to restore required data after a restart in a different environment. 
        default: true
        required: true
    requirements:
      # Require deployment on an Infrastructure entity
      - host:
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, UNBOUNDED]
      # Allow the definition of endpoints provided by this Component
      - provides_endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of endpoints provided by this Component
      - provides_external_endpoint:
          capability: tosca.capabilities.Endpoint.Public
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Links between Components
      - endpoint_link:
          capability: tosca.capabilities.Endpoint
          node: cna.qualityModel.entities.Endpoint
          relationship: cna.qualityModel.relationships.ConnectsTo.Link
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Backing Data usage
      - uses_backing_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.BackingData
          relationship: cna.qualityModel.relationships.AttachesTo.BackingData
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.SoftwareComponent.Service:
    derived_from: tosca.nodes.SoftwareComponent
    description: Node Type to model Service entities
    properties:
      replicas:
        type: integer
        description: The minimum number of replicated instances for this service when it is running
        required: true
        default: 1
    requirements:
      # Allow the definition of endpoints provided by this Component
      - provides_endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of endpoints provided by this Component
      - provides_external_endpoint:
          capability: tosca.capabilities.Endpoint.Public
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Links between Components
      - endpoint_link:
          capability: tosca.capabilities.Endpoint
          node: cna.qualityModel.entities.Endpoint
          relationship: cna.qualityModel.relationships.ConnectsTo.Link
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Backing Data usage
      - uses_backing_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.BackingData
          relationship: cna.qualityModel.relationships.AttachesTo.BackingData
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.BackingService:
    derived_from: tosca.nodes.Root
    description: Node Type to model Backing Service entities
    properties:
      providedFunctionality:
        type: string
        description: "A short description of the provided functionality."
        required: false
    requirements:
      - host:
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, UNBOUNDED]
      # Allow the definition of endpoints provided by this Component
      - provides_endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of endpoints provided by this Component
      - provides_external_endpoint:
          capability: tosca.capabilities.Endpoint.Public
          relationship: cna.qualityModel.relationships.Provides.Endpoint
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Links between Components
      - endpoint_link:
          capability: tosca.capabilities.Endpoint
          node: cna.qualityModel.entities.Endpoint
          relationship: cna.qualityModel.relationships.ConnectsTo.Link
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Backing Data usage
      - uses_backing_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.BackingData
          relationship: cna.qualityModel.relationships.AttachesTo.BackingData
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.Endpoint:
    derived_from: tosca.nodes.Root
    description: Endpoint type to explicitly model endpoints as entities
    capabilities:
      # Allow assigning exactly one Endpoint Capability
      endpoint:
        type: tosca.capabilities.Endpoint
        occurrences: [1, 1]
    requirements:
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.Endpoint.External:
    derived_from: tosca.nodes.Root
    description: Endpoint type to explicitly model endpoints as entities
    capabilities:
      # Allow assigning exactly one External Endpoint Capability
      external_endpoint:
        type: tosca.capabilities.Endpoint.Public
        occurrences: [1, 1]
    requirements:
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.Compute.Infrastructure:
    derived_from: tosca.nodes.Compute
    description: Node Type to model Infrastructure entities
    properties:
      managed:
        type: boolean
        description: Infrastructure is managed if it is exclusively operated by someone else, e.g. a cloud provider and the source code of the infrastructure instance is inaccessible. If the source code of an infrastructure can be changed by yourself, the infrastructure is not managed.
        required: true
        default: false
      availability_zone:
        type: string
        required: true
        description: The name of the availability zone in which this infrastructure is provided. If it is running in multiple availability zones, provide their names as a comma-separated list.
        default: default-zone
      region:
        type: string
        required: true
        description: The name of the region in which this infrastructure is provided.
        default: default-region
    requirements:
      # Allow the deployment on another Infrastructure entity
      - host:
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Backing Data usage
      - uses_backing_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.BackingData
          relationship: cna.qualityModel.relationships.AttachesTo.BackingData
          occurrences: [0, UNBOUNDED]

  cna.qualityModel.entities.BackingData:
    derived_from: tosca.nodes.Root
    description: Node Type to model Backing Data entities
    properties:
      included_data:
        type: map
        required: true
        key_schema:
          type: string
          description: The name specifying the individual Backing Data element
        entry_schema:
          type: string
          description: The value of the individual Backing Data element
    capabilities:
      provides_data:
          type: tosca.capabilities.Attachment
          valid_source_types:
            - cna.qualityModel.entities.Root.Component
            - cna.qualityModel.entities.SoftwareComponent.Service
            - cna.qualityModel.entities.BackingService
            - cna.qualityModel.entities.DBMS.StorageService
            - cna.qualityModel.entities.Compute.Infrastructure
          occurrences: [1, UNBOUNDED]

  cna.qualityModel.entities.DataAggregate:
    derived_from: tosca.nodes.Root
    description: Node Type to model Data Aggregate entities
    requirements:
      # Allows Data Aggregate to be persisted by Storage Backing Service entity
      - persistence:
          capability: cna.qualityModel.capabilities.DataStorage
          node: cna.qualityModel.entities.DBMS.StorageService
          relationship: cna.qualityModel.relationships.AttachesTo.Data
          occurrences: [1, UNBOUNDED]
    capabilities:
      # Allows Data Aggregate to be used by other entities
      provides_data:
        type: tosca.capabilities.Attachment
        valid_source_types:
          - cna.qualityModel.entities.Root.Component
          - cna.qualityModel.entities.SoftwareComponent.Service
          - cna.qualityModel.entities.BackingService
          - cna.qualityModel.entities.DBMS.StorageService
        occurrences: [1, UNBOUNDED]


  cna.qualityModel.entities.DBMS.StorageService:
    derived_from: tosca.nodes.DBMS
    description: Node Type to model Storage Backing Service entities
    properties:
      name:
        type: string
        description: >-
          the logical name of the database
        required: true
      stateless:
        type: boolean
        description: Storage Backing Service are per default stateful (not stateless)
        default: false
        required: true
      replicas:
        type: integer
        description: The minimum number of replicated instances for this storage service when it is running
        required: true
        default: 1
      shards:
        type: integer
        description: The number of shards this storage service is configured with, the default of 1 means no sharding is used.
        required: true
        default: 1
    requirements:
      # Allow the definition of Links between Components
      - endpoint_link:
          capability: tosca.capabilities.Endpoint
          node: cna.qualityModel.entities.Endpoint
          relationship: cna.qualityModel.relationships.ConnectsTo.Link
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Data Aggregate usage
      - uses_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.DataAggregate
          relationship: cna.qualityModel.relationships.AttachesTo.DataAggregate
          occurrences: [0, UNBOUNDED]
      # Allow the definition of Backing Data usage
      - uses_backing_data:
          capability: tosca.capabilities.Attachment
          node: cna.qualityModel.entities.BackingData
          relationship: cna.qualityModel.relationships.AttachesTo.BackingData
          occurrences: [0, UNBOUNDED]
    capabilities:
      # Allow assigning Endpoint entities
      endpoint:
        type: tosca.capabilities.Endpoint
        occurrences: [0, UNBOUNDED]
      # Allow assigning External Endpoint entities
      external_endpoint:
        type: tosca.capabilities.Endpoint.Public
        occurrences: [0, UNBOUNDED]
      # Needed so that Data Aggregates can be stored
      persist_data:
        type: cna.qualityModel.capabilities.DataStorage
        description: The ability to persist Data Aggregates like Business Objects
        valid_source_types: [cna.qualityModel.entities.DataAggregate]
        occurrences: [1, UNBOUNDED]


  cna.qualityModel.entities.RequestTrace:
    derived_from: tosca.nodes.Root
    description: Node Type to model Request Trace entities
    properties:
      referred_endpoint:
        type: string
        required: true
      nodes:
        type: list
        required: false
        entry_schema:
          description: An existing Component, Service, Backing Service or Storage Backing Service entity which is part of this Request Trace entity
          type: string
      involved_links:
        type: list
        required: true
        entry_schema:
          description: An existing Link entity which is part of this Request Trace entity
          type: string
    requirements:
      # Reference to External Endpoint for which the Request Trace is defined
      - external_endpoint:
          capability: tosca.capabilities.Endpoint.Public
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
